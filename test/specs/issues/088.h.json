[
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ],
        "scopesBegin": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": " .h file with C++ syntax highlighting",
        "scopes": [],
        "scopesEnd": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": "#",
        "scopes": [
            "punctuation.definition.directive.cpp"
        ],
        "scopesBegin": [
            "meta.preprocessor.cpp",
            "keyword.control.directive.conditional.cpp"
        ]
    },
    {
        "source": "ifdef",
        "scopes": [],
        "scopesEnd": [
            "keyword.control.directive.conditional.cpp"
        ]
    },
    {
        "source": "USE_IN_HLSL",
        "scopes": [
            "entity.name.function.preprocessor.cpp"
        ],
        "scopesEnd": [
            "meta.preprocessor.cpp"
        ]
    },
    {
        "source": "cbuffer  testCB",
        "scopes": []
    },
    {
        "source": "#",
        "scopes": [
            "punctuation.definition.directive.cpp"
        ],
        "scopesBegin": [
            "meta.preprocessor.cpp",
            "keyword.control.directive.conditional.cpp"
        ]
    },
    {
        "source": "else",
        "scopes": [],
        "scopesEnd": [
            "meta.preprocessor.cpp",
            "keyword.control.directive.conditional.cpp"
        ]
    },
    {
        "source": "struct",
        "scopes": [
            "storage.type.struct.cpp"
        ],
        "scopesBegin": [
            "meta.block.struct.cpp",
            "meta.head.struct.cpp"
        ]
    },
    {
        "source": "testCB",
        "scopes": [
            "entity.name.type.struct.cpp"
        ]
    },
    {
        "source": "#endif",
        "scopes": [
            "keyword.control.directive.#endif.cpp"
        ]
    },
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ],
        "scopesBegin": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": " <= this #endif is highlighted white although its valid",
        "scopes": [],
        "scopesEnd": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": "{",
        "scopes": [
            "punctuation.section.block.begin.bracket.curly.struct.cpp"
        ],
        "scopesEnd": [
            "meta.head.struct.cpp"
        ]
    },
    {
        "source": "float",
        "scopes": [
            "storage.type.primitive.cpp"
        ],
        "scopesBegin": [
            "meta.body.struct.cpp"
        ]
    },
    {
        "source": " Brightness",
        "scopes": []
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ]
    },
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ],
        "scopesBegin": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": " ...",
        "scopes": [],
        "scopesEnd": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": "}",
        "scopes": [
            "punctuation.section.block.end.bracket.curly.struct.cpp"
        ],
        "scopesEnd": [
            "meta.body.struct.cpp"
        ]
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ],
        "scopesEnd": [
            "meta.block.struct.cpp"
        ]
    },
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ],
        "scopesBegin": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": " the .h file with this struct definition can be used in HLSL and in C++ code ",
        "scopes": []
    },
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ]
    },
    {
        "source": " this way",
        "scopes": []
    }
]