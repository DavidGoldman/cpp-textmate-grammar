- source: >-
    struct copy_storage_helper<pointerT, hashT, allocatorT, false>     //
    copyableT
- source: '      {'
- source: '        [[noreturn]] void operator()(pointerT /*ptr*/, const hashT& /*hf*/, pointerT /*ptr_old*/, size_t /*off*/, size_t /*cnt*/) const'
- source: '          {'
- source: '            // `allocatorT::value_type` is not copy-constructible.'
- source: '            // Throw an exception unconditionally, even when there is nothing to copy.'
- source: '            noadl::sprintf_and_throw<domain_error>("cow_hashmap: `%s` is not copy-constructible.",'
- source: '                                                   typeid(typename allocatorT::value_type).name());'
- source: '          }'
- source: '      };'
- source: >-
    template<typename pointerT, typename hashT, typename allocatorT> struct
    copy_storage_helper<pointerT, hashT, allocatorT,
- source: '                                                                                                false>     // copyableT'
- source: '      {'
- source: '        [[noreturn]] void operator()(pointerT /*ptr*/, const hashT& /*hf*/, pointerT /*ptr_old*/, size_t /*off*/, size_t /*cnt*/) const'
- source: '          {'
- source: '            // `allocatorT::value_type` is not copy-constructible.'
- source: '            // Throw an exception unconditionally, even when there is nothing to copy.'
- source: '            noadl::sprintf_and_throw<domain_error>("cow_hashmap: `%s` is not copy-constructible.",'
- source: '                                                   typeid(typename allocatorT::value_type).name());'
- source: '          }'
- source: '};'
