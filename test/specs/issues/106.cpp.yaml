- scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
  source: 'bool '
- scopes:
    - entity.name.type.template.cpp
  source: check
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - keyword.operator.logical.cpp
  source: '!'
- scopes:
    - storage.type.template.argument.Identity.cpp
  source: Identity
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - entity.name.type.template.cpp
  source: class
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: std
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - support.type.posix-reserved.cpp
  source: enable_if_t
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: check
- scopesEnd:
    - meta.template.definition.cpp
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: '>'
- scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- source: 'result_type '
- scopesBegin:
    - meta.function.definition.parameters.operator-overload.cpp
  scopes:
    - keyword.other.operator.overload.cpp
  source: operator
- scopes:
    - entity.name.operator.overloadee.cpp
  source: ()
- scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload.cpp
  source: (
- source: 'argument_type '
- scopes:
    - variable.parameter.cpp
  source: k
- scopesEnd:
    - meta.function.definition.parameters.operator-overload.cpp
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload.cpp
  source: )
- scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
  source: '{'
- scopesEnd:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  source: '}'
- scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.class
    - .cpp
  source: 'class '
- scopes:
    - entity.name.type.template.cpp
  source: A
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - storage.type.template.cpp
  source: 'class '
- scopes:
    - entity.name.type.template.cpp
  source: B
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - storage.type.template.argument.C.cpp
  source: C
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - storage.type.template.cpp
  source: 'typename '
- scopes:
    - entity.name.type.template.cpp
  source: D
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.E.cpp
  source: E
- scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
