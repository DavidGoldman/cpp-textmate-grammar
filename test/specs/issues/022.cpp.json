[
    {
        "source": "sscanf",
        "scopes": [
            "entity.name.function.cpp"
        ],
        "scopesBegin": [
            "meta.function.definition.parameters.cpp",
            "meta.function.definition.parameters.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.parameters.begin.bracket.round.cpp"
        ]
    },
    {
        "source": "user_input",
        "scopes": []
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": "\"",
        "scopes": [
            "punctuation.definition.string.begin.cpp"
        ],
        "scopesBegin": [
            "string.quoted.double.cpp"
        ]
    },
    {
        "source": "%c",
        "scopes": [
            "constant.other.placeholder.cpp"
        ]
    },
    {
        "source": " %[^",
        "scopes": []
    },
    {
        "source": "\\n",
        "scopes": [
            "constant.character.escape.cpp"
        ]
    },
    {
        "source": "]",
        "scopes": []
    },
    {
        "source": "\"",
        "scopes": [
            "punctuation.definition.string.end.cpp"
        ],
        "scopesEnd": [
            "string.quoted.double.cpp"
        ]
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": "&",
        "scopes": [
            "keyword.operator.cpp"
        ]
    },
    {
        "source": "arg0",
        "scopes": [
            "variable.parameter.cpp"
        ]
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": " arg_str",
        "scopes": []
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.parameters.end.bracket.round.cpp"
        ],
        "scopesEnd": [
            "meta.function.definition.parameters.cpp",
            "meta.function.definition.parameters.cpp"
        ]
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ]
    },
    {
        "source": "//",
        "scopes": [
            "punctuation.definition.comment.cpp"
        ],
        "scopesBegin": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": " reads char into arg0, the remainder until \\n to arg_str",
        "scopes": [],
        "scopesEnd": [
            "comment.line.double-slash.cpp"
        ]
    },
    {
        "source": "void",
        "scopes": [
            "storage.type.primitive.cpp"
        ]
    },
    {
        "source": "test",
        "scopes": [
            "entity.name.function.cpp"
        ],
        "scopesBegin": [
            "meta.function.definition.parameters.cpp",
            "meta.function.definition.parameters.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.parameters.begin.bracket.round.cpp"
        ]
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.parameters.end.bracket.round.cpp"
        ],
        "scopesEnd": [
            "meta.function.definition.parameters.cpp",
            "meta.function.definition.parameters.cpp"
        ]
    },
    {
        "source": "{",
        "scopes": [
            "punctuation.section.block.begin.bracket.curly.cpp"
        ],
        "scopesBegin": [
            "meta.block.cpp"
        ]
    },
    {
        "source": "    t ",
        "scopes": []
    },
    {
        "source": "=",
        "scopes": [
            "keyword.operator.assignment.cpp"
        ]
    },
    {
        "source": "time",
        "scopes": [
            "entity.name.function.call.cpp"
        ],
        "scopesBegin": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.arguments.begin.bracket.round.cpp"
        ]
    },
    {
        "source": "NULL",
        "scopes": [
            "constant.language.NULL.cpp"
        ]
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.arguments.end.bracket.round.cpp"
        ],
        "scopesEnd": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ]
    },
    {
        "source": "    tmp ",
        "scopes": []
    },
    {
        "source": "=",
        "scopes": [
            "keyword.operator.assignment.cpp"
        ]
    },
    {
        "source": "localtime",
        "scopes": [
            "entity.name.function.call.cpp"
        ],
        "scopesBegin": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.arguments.begin.bracket.round.cpp"
        ]
    },
    {
        "source": "&",
        "scopes": [
            "keyword.operator.cpp"
        ]
    },
    {
        "source": "t",
        "scopes": []
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.arguments.end.bracket.round.cpp"
        ],
        "scopesEnd": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ]
    },
    {
        "source": "strftime",
        "scopes": [
            "entity.name.function.call.cpp"
        ],
        "scopesBegin": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.arguments.begin.bracket.round.cpp"
        ]
    },
    {
        "source": "timestr",
        "scopes": []
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": "sizeof",
        "scopes": [
            "keyword.operator.functionlike.cpp",
            "keyword.operator.sizeof.cpp"
        ]
    },
    {
        "source": "(",
        "scopes": [
            "punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp"
        ]
    },
    {
        "source": "timestr",
        "scopes": [
            "meta.arguments.operator.sizeof"
        ]
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp"
        ]
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": "\"",
        "scopes": [
            "punctuation.definition.string.begin.cpp"
        ],
        "scopesBegin": [
            "string.quoted.double.cpp"
        ]
    },
    {
        "source": "%Y-%m-",
        "scopes": []
    },
    {
        "source": "%d",
        "scopes": [
            "constant.other.placeholder.cpp"
        ]
    },
    {
        "source": " %H:%M:",
        "scopes": []
    },
    {
        "source": "%s",
        "scopes": [
            "constant.other.placeholder.cpp"
        ]
    },
    {
        "source": "\"",
        "scopes": [
            "punctuation.definition.string.end.cpp"
        ],
        "scopesEnd": [
            "string.quoted.double.cpp"
        ]
    },
    {
        "source": ",",
        "scopes": [
            "comma.cpp",
            "punctuation.separator.delimiter.cpp"
        ]
    },
    {
        "source": " tmp",
        "scopes": []
    },
    {
        "source": ")",
        "scopes": [
            "punctuation.section.arguments.end.bracket.round.cpp"
        ],
        "scopesEnd": [
            "meta.function-call.cpp"
        ]
    },
    {
        "source": ";",
        "scopes": [
            "punctuation.terminator.statement.cpp"
        ]
    },
    {
        "source": "}",
        "scopes": [
            "punctuation.section.block.end.bracket.curly.cpp"
        ]
    }
]