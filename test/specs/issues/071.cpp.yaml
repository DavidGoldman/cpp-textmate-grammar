- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: A
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: int
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.type.primitive.cpp
- source: ' a'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: ' b'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '    usertype user_value'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '    usertype user_value'
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: ''''
  scopesBegin:
    - string.quoted.single.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
- source: A
- source: ''''
  scopes:
    - punctuation.definition.string.end.cpp
  scopesEnd:
    - string.quoted.single.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: ' a[] '
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: '1'
  scopes:
    - constant.numeric.decimal.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '2'
  scopes:
    - constant.numeric.decimal.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '3'
  scopes:
    - constant.numeric.decimal.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: scoped
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: templated
- source: <
  scopes:
    - keyword.operator.comparison.cpp
- source: type
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
- source: ' value'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '    compound'
- source: <
  scopes:
    - keyword.operator.comparison.cpp
- source: typename
  scopes:
    - storage.modifier.cpp
- source: templated
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: 'type '
- source: '*'
  scopes:
    - keyword.operator.cpp
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
- source: '::type value'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: ' a'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: ' b'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: usertype user_value
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: usertype user_value
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: ''''
  scopesBegin:
    - string.quoted.single.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
- source: A
- source: ''''
  scopes:
    - punctuation.definition.string.end.cpp
  scopesEnd:
    - string.quoted.single.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: scoped
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: templated
- source: <
  scopes:
    - keyword.operator.comparison.cpp
- source: type
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
- source: ' value'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: compound
- source: <
  scopes:
    - keyword.operator.comparison.cpp
- source: typename
  scopes:
    - storage.modifier.cpp
- source: templated
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: 'type '
- source: '*'
  scopes:
    - keyword.operator.cpp
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
- source: '::type value'
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: ' a[] '
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: '1'
  scopes:
    - constant.numeric.decimal.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '2'
  scopes:
    - constant.numeric.decimal.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '3'
  scopes:
    - constant.numeric.decimal.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: void
  scopes:
    - storage.type.primitive.cpp
- source: function_declaration
  scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: '*'
  scopes:
    - keyword.operator.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: ' usertype '
- source: user_value
  scopes:
    - variable.parameter.cpp
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
