- scopesBegin:
    - meta.preprocessor.pragma.cpp
    - keyword.control.directive.pragma.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.pragma.cpp
  source: pragma
- scopesEnd:
    - meta.preprocessor.pragma.cpp
  scopes:
    - entity.other.attribute-name.pragma.preprocessor.cpp
  source: once
- scopesBegin:
    - meta.preprocessor.include.cpp
    - keyword.control.directive.include.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.include.cpp
  source: include
- scopesBegin:
    - string.quoted.other.lt-gt.include.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
  source: <
- source: type_traits
- scopesEnd:
    - meta.preprocessor.include.cpp
    - string.quoted.other.lt-gt.include.cpp
  scopes:
    - punctuation.definition.string.end.cpp
  source: '>'
- scopesBegin:
    - meta.preprocessor.macro.cpp
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.define.cpp
  source: define
- scopes:
    - entity.name.function.preprocessor.cpp
  source: IsPointDef
- scopes:
    - punctuation.section.parens.begin.bracket.round.cpp
  source: (
- scopes:
    - punctuation.vararg-ellipses.cpp
  source: ...
- scopes:
    - punctuation.section.parens.end.bracket.round.cpp
  source: )
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsPoint
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: __VA_ARGS__
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  source: '>'
- source: ' \'
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopes:
    - storage.modifier.specifier.static.cpp
  source: static
- scopes:
    - storage.modifier.specifier.const.cpp
  source: const
- scopes:
    - storage.type.primitive.cpp
  source: bool
- source: ' isPoint '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - constant.language.true.cpp
  source: 'true'
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesEnd:
    - meta.body.struct.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesBegin:
    - meta.tail.struct.cpp
    - meta.preprocessor.macro.cpp
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.define.cpp
  source: define
- scopes:
    - entity.name.function.preprocessor.cpp
  source: ArrayBasedPointDef
- scopes:
    - punctuation.definition.parameters.begin.cpp
  source: (
- scopes:
    - variable.parameter.preprocessor.cpp
  source: T
- scopes:
    - punctuation.definition.parameters.end.cpp
  source: )
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.function.cpp
  scopes:
    - entity.name.function.cpp
  source: IsPointDef
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- source: T
- scopesEnd:
    - meta.function.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsArrayBasedPoint
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: T
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  source: '>'
- source: ':'
- scopes:
    - storage.type.modifier.access.public.cpp
  source: public
- scopes:
    - entity.name.type.inherited.cpp
  source: std
- source: '::'
- scopes:
    - entity.name.type.inherited.cpp
  source: true_type
- source: ' \'
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopes:
    - meta.body.struct.cpp
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesEnd:
    - meta.block.struct.cpp
  scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesBegin:
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.define.cpp
  source: define
- scopes:
    - entity.name.function.preprocessor.cpp
  source: XYBasedPointDef
- scopes:
    - punctuation.definition.parameters.begin.cpp
  source: (
- scopes:
    - variable.parameter.preprocessor.cpp
  source: T
- scopes:
    - punctuation.definition.parameters.end.cpp
  source: )
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.function.cpp
  scopes:
    - entity.name.function.cpp
  source: IsPointDef
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- source: T
- scopesEnd:
    - meta.function.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsXYBasedPoint
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: T
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  source: '>'
- source: ':'
- scopes:
    - storage.type.modifier.access.public.cpp
  source: public
- scopes:
    - entity.name.type.inherited.cpp
  source: std
- source: '::'
- scopes:
    - entity.name.type.inherited.cpp
  source: true_type
- source: ' \'
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopes:
    - meta.body.struct.cpp
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesEnd:
    - meta.block.struct.cpp
  scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesBegin:
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
  source: '#'
- scopesEnd:
    - keyword.control.directive.define.cpp
  source: define
- scopes:
    - entity.name.function.preprocessor.cpp
  source: TypeTAndUIsPoint
- scopes:
    - constant.character.escape.line-continuation.cpp
  source: \
- scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
  source: 'typename '
- scopes:
    - entity.name.type.template.cpp
  source: T
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - storage.type.template.argument.typename
    - .cpp
  source: 'typename '
- scopes:
    - entity.name.type.template.cpp
  source: U
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - entity.name.type.template.cpp
  source: class
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - storage.modifier.cpp
  source: typename
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: std
- scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: enable_if
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: <
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: IsPoint
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: T
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: '>'
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - storage.type.user-defined.cpp
  source: isPoint
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: '>'
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - storage.type.template.argument.type.cpp
  source: type
- scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
  source: ','
- scopes:
    - entity.name.type.template.cpp
  source: class
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - storage.modifier.cpp
  source: typename
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: std
- scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: enable_if
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: <
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: IsPoint
- scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: <
- scopes:
    - storage.type.user-defined.cpp
  source: U
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: '>'
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - storage.type.user-defined.cpp
  source: isPoint
- scopesEnd:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
  source: '>'
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.type.cpp
  source: type
- scopesEnd:
    - meta.preprocessor.macro.cpp
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopesBegin:
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
  source: namespace
- scopes:
    - entity.name.type.namespace.cpp
  source: Navigation
- scopesEnd:
    - meta.head.namespace.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  source: '{'
- scopesBegin:
    - meta.body.namespace.cpp
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
  source: namespace
- scopes:
    - entity.name.type.namespace.cpp
  source: Utils
- scopesEnd:
    - meta.head.namespace.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  source: '{'
- scopesBegin:
    - meta.body.namespace.cpp
  scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
  source: 'typename '
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - entity.name.type.template.cpp
  source: T
- scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsPoint
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
  source: static
- scopes:
    - storage.modifier.specifier.const.cpp
  source: const
- scopes:
    - storage.type.primitive.cpp
  source: bool
- source: ' isPoint '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - constant.language.false.cpp
  source: 'false'
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesEnd:
    - meta.body.struct.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesEnd:
    - meta.block.struct.cpp
  scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
  source: 'typename '
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - entity.name.type.template.cpp
  source: T
- scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsArrayBasedPoint
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
  source: static
- scopes:
    - storage.modifier.specifier.const.cpp
  source: const
- scopes:
    - storage.type.primitive.cpp
  source: bool
- source: ' value '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - constant.language.false.cpp
  source: 'false'
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesEnd:
    - meta.body.struct.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesEnd:
    - meta.block.struct.cpp
  scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - storage.type.template.cpp
  source: template
- scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
  source: <
- scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
  source: 'typename '
- scopesEnd:
    - meta.template.definition.cpp
  scopes:
    - entity.name.type.template.cpp
  source: T
- scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  source: '>'
- scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
  source: struct
- scopes:
    - entity.name.type.struct.cpp
  source: IsXYBasedPoint
- scopesEnd:
    - meta.head.struct.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  source: '{'
- scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
  source: static
- scopes:
    - storage.modifier.specifier.const.cpp
  source: const
- scopes:
    - storage.type.primitive.cpp
  source: bool
- source: ' value '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - constant.language.false.cpp
  source: 'false'
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesEnd:
    - meta.body.struct.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  source: '}'
- scopesEnd:
    - meta.block.struct.cpp
  scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesEnd:
    - meta.block.namespace.cpp
    - meta.body.namespace.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
  source: '}'
- scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
  source: '}'
