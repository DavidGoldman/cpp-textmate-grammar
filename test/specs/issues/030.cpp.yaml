- source: '#'
  scopesBegin:
    - meta.preprocessor.pragma.cpp
    - keyword.control.directive.pragma.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: pragma
  scopesEnd:
    - keyword.control.directive.pragma.cpp
- source: once
  scopes:
    - entity.other.attribute-name.pragma.preprocessor.cpp
  scopesEnd:
    - meta.preprocessor.pragma.cpp
- source: '#'
  scopesBegin:
    - meta.preprocessor.include.cpp
    - keyword.control.directive.include.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: include
  scopesEnd:
    - keyword.control.directive.include.cpp
- source: <
  scopesBegin:
    - string.quoted.other.lt-gt.include.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
- source: type_traits
- source: '>'
  scopes:
    - punctuation.definition.string.end.cpp
  scopesEnd:
    - meta.preprocessor.include.cpp
    - string.quoted.other.lt-gt.include.cpp
- source: '#'
  scopesBegin:
    - meta.preprocessor.macro.cpp
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: define
  scopesEnd:
    - keyword.control.directive.define.cpp
- source: IsPointDef
  scopes:
    - entity.name.function.preprocessor.cpp
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.cpp
- source: ...
  scopes:
    - punctuation.vararg-ellipses.cpp
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: template
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsPoint
  scopes:
    - entity.name.type.struct.cpp
- source: <
  scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
- source: __VA_ARGS__
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  scopesEnd:
    - meta.template.call.cpp
- source: ' \'
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: \
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: static
  scopes:
    - storage.modifier.specifier.static.cpp
- source: const
  scopes:
    - storage.modifier.specifier.const.cpp
- source: bool
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: 'isPoint'
  scopes:
    - variable.other
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: 'true'
  scopes:
    - constant.language.true.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: '#'
  scopesBegin:
    - meta.tail.struct.cpp
    - meta.preprocessor.macro.cpp
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: define
  scopesEnd:
    - keyword.control.directive.define.cpp
- source: ArrayBasedPointDef
  scopes:
    - entity.name.function.preprocessor.cpp
- source: (
  scopes:
    - punctuation.definition.parameters.begin.cpp
- source: T
  scopes:
    - variable.parameter.preprocessor.cpp
- source: )
  scopes:
    - punctuation.definition.parameters.end.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: IsPointDef
  scopesBegin:
    - meta.function.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
- source: T
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  scopesEnd:
    - meta.function.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: template
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsArrayBasedPoint
  scopes:
    - entity.name.type.struct.cpp
- source: <
  scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
- source: T
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  scopesEnd:
    - meta.template.call.cpp
- source: ':'
- source: public
  scopes:
    - storage.type.modifier.access.public.cpp
- source: std
  scopes:
    - entity.name.type.inherited.cpp
- source: '::'
- source: true_type
  scopes:
    - entity.name.type.inherited.cpp
- source: ' \'
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: '}'
  scopes:
    - meta.body.struct.cpp
    - punctuation.section.block.end.bracket.curly.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: '#'
  scopesBegin:
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: define
  scopesEnd:
    - keyword.control.directive.define.cpp
- source: XYBasedPointDef
  scopes:
    - entity.name.function.preprocessor.cpp
- source: (
  scopes:
    - punctuation.definition.parameters.begin.cpp
- source: T
  scopes:
    - variable.parameter.preprocessor.cpp
- source: )
  scopes:
    - punctuation.definition.parameters.end.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: IsPointDef
  scopesBegin:
    - meta.function.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
- source: T
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  scopesEnd:
    - meta.function.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: template
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsXYBasedPoint
  scopes:
    - entity.name.type.struct.cpp
- source: <
  scopesBegin:
    - meta.template.call.cpp
  scopes:
    - punctuation.section.angle-brackets.begin.template.call.cpp
- source: T
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call.cpp
  scopesEnd:
    - meta.template.call.cpp
- source: ':'
- source: public
  scopes:
    - storage.type.modifier.access.public.cpp
- source: std
  scopes:
    - entity.name.type.inherited.cpp
- source: '::'
- source: true_type
  scopes:
    - entity.name.type.inherited.cpp
- source: ' \'
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: '}'
  scopes:
    - meta.body.struct.cpp
    - punctuation.section.block.end.bracket.curly.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: '#'
  scopesBegin:
    - keyword.control.directive.define.cpp
  scopes:
    - punctuation.definition.directive.cpp
- source: define
  scopesEnd:
    - keyword.control.directive.define.cpp
- source: TypeTAndUIsPoint
  scopes:
    - entity.name.function.preprocessor.cpp
- source: \
  scopes:
    - constant.character.escape.line-continuation.cpp
- source: template
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'typename '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
- source: T
  scopes:
    - entity.name.type.template.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
- source: 'typename '
  scopes:
    - storage.type.template.argument.typename
    - .cpp
- source: U
  scopes:
    - entity.name.type.template.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
- source: class
  scopes:
    - entity.name.type.template.cpp
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: typename
  scopes:
    - storage.modifier.cpp
- source: std
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
- source: enable_if
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: <
  scopes:
    - meta.template.call.cpp
- source: IsPoint
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: <
  scopes:
    - meta.template.call.cpp
- source: T
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - meta.template.call.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: isPoint
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - meta.template.call.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: type
  scopes:
    - storage.type.template.argument.type.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.template.argument.cpp
- source: class
  scopes:
    - entity.name.type.template.cpp
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: typename
  scopes:
    - storage.modifier.cpp
- source: std
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
- source: enable_if
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: <
  scopes:
    - meta.template.call.cpp
- source: IsPoint
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: <
  scopes:
    - meta.template.call.cpp
- source: U
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - meta.template.call.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: isPoint
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - meta.template.call.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: type
  scopes:
    - storage.type.template.argument.type.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
  scopesEnd:
    - meta.preprocessor.macro.cpp
- source: namespace
  scopesBegin:
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
- source: Navigation
  scopes:
    - entity.name.type.namespace.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.head.namespace.cpp
- source: namespace
  scopesBegin:
    - meta.body.namespace.cpp
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
- source: Utils
  scopes:
    - entity.name.type.namespace.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.head.namespace.cpp
- source: template
  scopesBegin:
    - meta.body.namespace.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'typename '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
- source: T
  scopes:
    - entity.name.type.template.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsPoint
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: static
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
- source: const
  scopes:
    - storage.modifier.specifier.const.cpp
- source: bool
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: isPoint
  scopes:
    - variable.other
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: 'false'
  scopes:
    - constant.language.false.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: template
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'typename '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
- source: T
  scopes:
    - entity.name.type.template.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsArrayBasedPoint
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: static
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
- source: const
  scopes:
    - storage.modifier.specifier.const.cpp
- source: bool
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: value
  scopes:
    - variable.other
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: 'false'
  scopes:
    - constant.language.false.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: template
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'typename '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.typename
    - .cpp
- source: T
  scopes:
    - entity.name.type.template.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: IsXYBasedPoint
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: static
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.modifier.specifier.static.cpp
- source: const
  scopes:
    - storage.modifier.specifier.const.cpp
- source: bool
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: value
  scopes:
    - variable.other
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: 'false'
  scopes:
    - constant.language.false.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.block.namespace.cpp
    - meta.body.namespace.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
