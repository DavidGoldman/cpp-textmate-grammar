- scopes:
    - storage.type.primitive.cpp
  source: void
- scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
  source: function
- scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
  source: (
- scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  source: )
- scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
  source: '{'
- scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.typeid.cpp
  source: typeid
- scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.typeid.cpp
  source: (
- scopes:
    - meta.arguments.operator.typeid
    - storage.type.primitive.cpp
  source: int
- scopes:
    - punctuation.section.arguments.end.bracket.round.operator.typeid.cpp
  source: )
- scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.typeid.cpp
  source: typeid
- scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.typeid.cpp
  source: (
- scopes:
    - meta.arguments.operator.typeid
    - storage.type.primitive.cpp
  source: long
- scopes:
    - punctuation.section.arguments.end.bracket.round.operator.typeid.cpp
  source: )
- scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.sizeof.cpp
  source: sizeof
- scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp
  source: (
- scopes:
    - meta.arguments.operator.sizeof
    - constant.numeric.decimal.cpp
  source: '1000'
- scopes:
    - punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp
  source: )
- scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.sizeof.cpp
  source: sizeof
- scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp
  source: (
- scopes:
    - meta.arguments.operator.sizeof
    - storage.type.primitive.cpp
  source: int
- scopes:
    - punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp
  source: )
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.other.decltype.cpp
    - storage.type.decltype.cpp
  source: decltype
- scopes:
    - punctuation.section.arguments.begin.bracket.round.decltype.cpp
  source: (
- scopes:
    - meta.arguments.decltype
    - storage.type.primitive.cpp
  source: int
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.decltype.cpp
  source: )
- scopes:
    - keyword.other.using.cpp
  source: using
- source: ' type '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.other.decltype.cpp
    - storage.type.decltype.cpp
  source: decltype
- scopes:
    - punctuation.section.arguments.begin.bracket.round.decltype.cpp
  source: (
- scopesBegin:
    - meta.arguments.decltype
  scopes:
    - variable.other.object.access.cpp
  source: a_storage_of_callable
- scopes:
    - punctuation.separator.dot-access.cpp
  source: .
- scopesEnd:
    - meta.arguments.decltype
  scopes:
    - variable.other.property.cpp
  source: callable
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.decltype.cpp
  source: )
- scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  source: '}'
