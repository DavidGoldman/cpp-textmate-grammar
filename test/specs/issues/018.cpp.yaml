- source: void
  scopes:
    - storage.type.primitive.cpp
- source: function
  scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: typeid
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.typeid.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.typeid.cpp
- source: int
  scopes:
    - meta.arguments.operator.typeid
    - storage.type.primitive.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.operator.typeid.cpp
- source: typeid
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.typeid.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.typeid.cpp
- source: long
  scopes:
    - meta.arguments.operator.typeid
    - storage.type.primitive.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.operator.typeid.cpp
- source: sizeof
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.sizeof.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp
- source: '1000'
  scopes:
    - meta.arguments.operator.sizeof
    - constant.numeric.decimal.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp
- source: sizeof
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.sizeof.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp
- source: int
  scopes:
    - meta.arguments.operator.sizeof
    - storage.type.primitive.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp
- source: decltype
  scopesBegin:
    - meta.function-call.cpp
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.other.decltype.cpp
    - storage.type.decltype.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.decltype.cpp
- source: int
  scopes:
    - meta.arguments.decltype
    - storage.type.primitive.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.decltype.cpp
  scopesEnd:
    - meta.function-call.cpp
- source: using
  scopes:
    - keyword.other.using.cpp
- source: ' type '
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: decltype
  scopesBegin:
    - meta.function-call.cpp
  scopes:
    - keyword.operator.functionlike.cpp
    - keyword.other.decltype.cpp
    - storage.type.decltype.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.decltype.cpp
- source: a_storage_of_callable
  scopesBegin:
    - meta.arguments.decltype
  scopes:
    - variable.other.object.access.cpp
- source: .
  scopes:
    - punctuation.separator.dot-access.cpp
- source: callable
  scopes:
    - variable.other.property.cpp
  scopesEnd:
    - meta.arguments.decltype
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.decltype.cpp
  scopesEnd:
    - meta.function-call.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
