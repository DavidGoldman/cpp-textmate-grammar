- source: class
  scopesBegin:
    - meta.block.class
    - meta.head.class
  scopes:
    - storage.type.class
- source: Example
  scopes:
    - entity.name.type.class
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.class
  scopesEnd:
    - meta.head.class
- source: '    Example '
  scopesBegin:
    - meta.body.class
- source: '&'
  scopes:
    - keyword.operator
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: ++
  scopes:
    - entity.name.operator.overloadee
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload
  scopesEnd:
    - meta.function.definition.parameters.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: ' int'
  scopes:
    - entity.name.operator.overloadee
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload
  scopesEnd:
    - meta.function.definition.parameters.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: std
  scopesBegin:
    - entity.name.operator.overloadee
  scopes:
    - entity.name.scope-resolution.function.definition.operator-overload
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.function.definition.operator-overload
- source: string &
  scopesEnd:
    - entity.name.operator.overloadee
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload
  scopesEnd:
    - meta.function.definition.parameters.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.class
  scopesEnd:
    - meta.body.class
- source: ;
  scopes:
    - punctuation.terminator.statement
