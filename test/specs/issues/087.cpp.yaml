- source: void
  scopes:
    - storage.type.primitive.cpp
- source: function
  scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: putIfExists
  scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
- source: <
  scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
- source: string
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
  scopesEnd:
    - meta.template.call.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
- source: cn
  scopes:
    - variable.other.object.access.cpp
- source: .
  scopes:
    - punctuation.separator.dot-access.cpp
- source: second
  scopes:
    - variable.other.property.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: ' common'
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '"'
  scopesBegin:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
- source: type
- source: '"'
  scopes:
    - punctuation.definition.string.end.cpp
  scopesEnd:
    - string.quoted.double.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  scopesEnd:
    - meta.function-call.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: putIfExists
  scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
- source: <
  scopesBegin:
    - meta.template.call.cpp
  scopes:
    - keyword.operator.comparison.cpp
- source: std
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: string
  scopes:
    - storage.type.user-defined.cpp
- source: '>'
  scopes:
    - keyword.operator.comparison.cpp
  scopesEnd:
    - meta.template.call.cpp
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
- source: cn
  scopes:
    - variable.other.object.access.cpp
- source: .
  scopes:
    - punctuation.separator.dot-access.cpp
- source: second
  scopes:
    - variable.other.property.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: ' common'
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: '"'
  scopesBegin:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
- source: type
- source: '"'
  scopes:
    - punctuation.definition.string.end.cpp
  scopesEnd:
    - string.quoted.double.cpp
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  scopesEnd:
    - meta.function-call.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
