- source: namespace
  scopesBegin:
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
- source: test
  scopes:
    - entity.name.type.namespace.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.head.namespace.cpp
- source: template
  scopesBegin:
    - meta.body.namespace.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'class '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.argument.class
    - .cpp
- source: T
  scopes:
    - entity.name.type.template.cpp
  scopesEnd:
    - meta.template.definition.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
- source: struct
  scopesBegin:
    - meta.block.struct.cpp
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: test
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: template
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.type.template.cpp
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition.cpp
- source: 'class '
  scopesBegin:
    - meta.template.definition.cpp
  scopes:
    - storage.type.template.cpp
- source: U
  scopes:
    - entity.name.type.template.cpp
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: std
  scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
- source: '::'
  scopes:
    - punctuation.separator.namespace.access.cpp
  scopesEnd:
    - meta.scope-resolution.cpp
- source: vector
- source: <
  scopesBegin:
    - meta.template.call.cpp
- source: int
  scopes:
    - storage.type.primitive.cpp
- source: '>'
  scopesEnd:
    - meta.template.definition.cpp
    - meta.template.call.cpp
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition.cpp
- source: bool
  scopes:
    - storage.type.primitive.cpp
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload.cpp
  scopes:
    - keyword.other.operator.overload.cpp
- source: ()
  scopes:
    - entity.name.operator.overloadee.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload.cpp
- source: 'U'
  scopesBegin:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - entity.name.type
    - meta.qualified_type
- source: k
  scopes:
    - variable.parameter.cpp
  scopesEnd:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload.cpp
  scopesEnd:
    - meta.function.definition.parameters.operator-overload.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: struct
  scopesBegin:
    - meta.head.struct.cpp
  scopes:
    - storage.type.struct.cpp
- source: test2
  scopes:
    - entity.name.type.struct.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct.cpp
  scopesEnd:
    - meta.head.struct.cpp
- source: bool
  scopesBegin:
    - meta.body.struct.cpp
  scopes:
    - storage.type.primitive.cpp
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload.cpp
  scopes:
    - keyword.other.operator.overload.cpp
- source: ()
  scopes:
    - entity.name.operator.overloadee.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload.cpp
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload.cpp
  scopesEnd:
    - meta.function.definition.parameters.operator-overload.cpp
- source: =
  scopes:
    - keyword.operator.assignment.cpp
- source: delete
  scopes:
    - keyword.operator.wordlike.cpp
    - memory.cpp
    - keyword.operator.delete.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct.cpp
  scopesEnd:
    - meta.body.struct.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
  scopesEnd:
    - meta.block.struct.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.block.namespace.cpp
    - meta.body.namespace.cpp
- source: //
  scopesBegin:
    - comment.line.double-slash.cpp
  scopes:
    - punctuation.definition.comment.cpp
- source: ' namespace test'
- source: //
  scopes:
    - punctuation.definition.comment.cpp
- source: ' no syntax highlighting'
  scopesEnd:
    - comment.line.double-slash.cpp
- source: class
  scopesBegin:
    - meta.block.class.cpp
    - meta.head.class.cpp
  scopes:
    - storage.type.class.cpp
- source: test2
  scopes:
    - entity.name.type.class.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.class.cpp
  scopesEnd:
    - meta.head.class.cpp
- source: '}'
  scopes:
    - meta.body.class.cpp
    - punctuation.section.block.end.bracket.curly.class.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
