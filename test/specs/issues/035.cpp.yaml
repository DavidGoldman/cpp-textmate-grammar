- source: namespace
  scopesBegin:
    - meta.block.namespace
    - meta.head.namespace
  scopes:
    - keyword.other.namespace.definition
    - storage.type.namespace.definition
- source: test
  scopes:
    - entity.name.type.namespace
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace
  scopesEnd:
    - meta.head.namespace
- source: template
  scopesBegin:
    - meta.body.namespace
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition
- source: 'class '
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template.argument.class
    - ''
- source: T
  scopes:
    - entity.name.type.template
  scopesEnd:
    - meta.template.definition
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
- source: struct
  scopesBegin:
    - meta.block.struct
    - meta.head.struct
  scopes:
    - storage.type.struct
- source: test
  scopes:
    - entity.name.type.struct
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct
  scopesEnd:
    - meta.head.struct
- source: template
  scopesBegin:
    - meta.body.struct
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition
- source: 'class '
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template
- source: U
  scopes:
    - entity.name.type.template
- source: =
  scopes:
    - keyword.operator.assignment
- source: std
  scopes:
    - entity.name.scope-resolution.template.definition
- source: '::'
  scopes:
    - punctuation.separator.scope-resolution.template.definition
- source: vector
- source: <
  scopesBegin:
    - meta.template.call
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: int
  scopes:
    - storage.type.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.template.definition
    - meta.template.call
    - meta.template.call
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
- source: bool
  scopes:
    - storage.type.primitive
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: ()
  scopes:
    - entity.name.operator.overloadee
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload
- source: 'U '
- source: k
  scopes:
    - variable.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload
  scopesEnd:
    - meta.function.definition.parameters.operator-overload
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct
  scopesEnd:
    - meta.body.struct
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: struct
  scopesBegin:
    - meta.head.struct
  scopes:
    - storage.type.struct
- source: test2
  scopes:
    - entity.name.type.struct
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct
  scopesEnd:
    - meta.head.struct
- source: bool
  scopesBegin:
    - meta.body.struct
  scopes:
    - storage.type.primitive
- source: operator
  scopesBegin:
    - meta.function.definition.parameters.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: ()
  scopes:
    - entity.name.operator.overloadee
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.operator-overload
  scopesEnd:
    - meta.function.definition.parameters.operator-overload
- source: =
  scopes:
    - keyword.operator.assignment
- source: delete
  scopes:
    - keyword.operator.wordlike
    - memory
    - keyword.operator.delete
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct
  scopesEnd:
    - meta.body.struct
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.struct
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace
  scopesEnd:
    - meta.block.namespace
    - meta.body.namespace
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' namespace test'
- source: //
  scopes:
    - punctuation.definition.comment
- source: ' no syntax highlighting'
  scopesEnd:
    - comment.line.double-slash
- source: class
  scopesBegin:
    - meta.block.class
    - meta.head.class
  scopes:
    - storage.type.class
- source: test2
  scopes:
    - entity.name.type.class
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.class
  scopesEnd:
    - meta.head.class
- source: '}'
  scopes:
    - meta.body.class
    - punctuation.section.block.end.bracket.curly.class
- source: ;
  scopes:
    - punctuation.terminator.statement
