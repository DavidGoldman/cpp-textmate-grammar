- source: namespace
  scopesBegin:
    - meta.block.namespace.cpp
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.head.namespace.cpp
- source: bool
  scopesBegin:
    - meta.body.namespace.cpp
  scopes:
    - storage.type.primitive.cpp
- source: foo
  scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
- source: 'bar'
  scopesBegin:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - entity.name.type
    - meta.qualified_type
- source: a
  scopes:
    - variable.parameter.cpp
  scopesEnd:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: int
  scopesBegin:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: b
  scopes:
    - variable.parameter.cpp
  scopesEnd:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: return
  scopes:
    - keyword.control.return.cpp
- source: 'true'
  scopes:
    - constant.language.true.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.body.namespace.cpp
- source: namespace
  scopesBegin:
    - meta.head.namespace.cpp
  scopes:
    - keyword.other.namespace.definition.cpp
    - storage.type.namespace.definition.cpp
- source: foo
  scopes:
    - entity.name.type.namespace.cpp
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace.cpp
  scopesEnd:
    - meta.head.namespace.cpp
- source: bool
  scopesBegin:
    - meta.body.namespace.cpp
  scopes:
    - storage.type.primitive.cpp
- source: foo
  scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
- source: 'bar'
  scopesBegin:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - entity.name.type
    - meta.qualified_type
- source: a
  scopesEnd:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - variable.parameter.cpp
- source: ','
  scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
- source: int
  scopesBegin:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
  scopes:
    - entity.name.type
    - meta.qualified_type
    - storage.type.primitive.cpp
- source: b
  scopes:
    - variable.parameter.cpp
  scopesEnd:
    - meta.function.parameter
    - meta.variable.declaration
    - meta.definition.variable
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
- source: '{'
  scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
- source: return
  scopes:
    - keyword.control.return.cpp
- source: 'true'
  scopes:
    - constant.language.true.cpp
- source: ;
  scopes:
    - punctuation.terminator.statement.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  scopesEnd:
    - meta.block.cpp
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace.cpp
