- scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
  source: sscanf
- scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
  source: (
- source: user_input
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- scopesBegin:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
  source: '"'
- scopes:
    - constant.other.placeholder.cpp
  source: '%c'
- source: ' %[^'
- scopes:
    - constant.character.escape.cpp
  source: \n
- source: ']'
- scopesEnd:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.end.cpp
  source: '"'
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- scopes:
    - keyword.operator.cpp
  source: '&'
- scopes:
    - variable.parameter.cpp
  source: arg0
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- source: ' arg_str'
- scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesBegin:
    - comment.line.double-slash.cpp
  scopes:
    - punctuation.definition.comment.cpp
  source: //
- scopesEnd:
    - comment.line.double-slash.cpp
  source: ' reads char into arg0, the remainder until \n to arg_str'
- scopes:
    - storage.type.primitive.cpp
  source: void
- scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
  source: test
- scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
  source: (
- scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  source: )
- scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
  source: '{'
- source: '    t '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
  source: time
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- scopes:
    - constant.language.NULL.cpp
  source: 'NULL'
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- source: '    tmp '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
  source: localtime
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- scopes:
    - keyword.operator.cpp
  source: '&'
- source: t
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
  source: strftime
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- source: timestr
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- scopes:
    - keyword.operator.functionlike.cpp
    - keyword.operator.sizeof.cpp
  source: sizeof
- scopes:
    - punctuation.section.arguments.begin.bracket.round.operator.sizeof.cpp
  source: (
- scopes:
    - meta.arguments.operator.sizeof
  source: timestr
- scopes:
    - punctuation.section.arguments.end.bracket.round.operator.sizeof.cpp
  source: )
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- scopesBegin:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.begin.cpp
  source: '"'
- source: '%Y-%m-'
- scopes:
    - constant.other.placeholder.cpp
  source: '%d'
- source: ' %H:%M:'
- scopes:
    - constant.other.placeholder.cpp
  source: '%s'
- scopesEnd:
    - string.quoted.double.cpp
  scopes:
    - punctuation.definition.string.end.cpp
  source: '"'
- scopes:
    - comma.cpp
    - punctuation.separator.delimiter.cpp
  source: ','
- source: ' tmp'
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  source: '}'
