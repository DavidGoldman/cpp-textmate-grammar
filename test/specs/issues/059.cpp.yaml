- scopes:
    - storage.type.primitive.cpp
  source: void
- scopesBegin:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - entity.name.function.cpp
  source: function
- scopes:
    - punctuation.section.parameters.begin.bracket.round.cpp
  source: (
- scopesEnd:
    - meta.function.definition.parameters.cpp
    - meta.function.definition.parameters.cpp
  scopes:
    - punctuation.section.parameters.end.bracket.round.cpp
  source: )
- scopesBegin:
    - meta.block.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.cpp
  source: '{'
- scopes:
    - storage.type.primitive.cpp
  source: auto
- source: ' postWakeup '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: wpi
- scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopesBegin:
    - meta.scope-resolution.cpp
  scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: uv
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopes:
    - entity.name.type.namespace.scope-resolution.cpp
  source: Async
- scopesBegin:
    - meta.template.call.cpp
    - keyword.operator.comparison.cpp
  source: <
- scopesEnd:
    - meta.template.call.cpp
    - keyword.operator.comparison.cpp
  source: '>'
- scopesEnd:
    - meta.scope-resolution.cpp
  scopes:
    - punctuation.separator.namespace.access.cpp
  source: '::'
- scopesBegin:
    - meta.function-call.cpp
  scopes:
    - entity.name.function.call.cpp
  source: Create
- scopes:
    - punctuation.section.arguments.begin.bracket.round.cpp
  source: (
- source: loop
- scopesEnd:
    - meta.function-call.cpp
  scopes:
    - punctuation.section.arguments.end.bracket.round.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- source: '    m_postMessageWakeup'
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- source: ' postWakeup'
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopes:
    - variable.other.object.access.cpp
  source: postWakeup
- scopes:
    - punctuation.separator.pointer-access.cpp
  source: '->'
- scopes:
    - variable.other.object.property.cpp
  source: wakeup.
- scopes:
    - entity.name.function.member.cpp
  source: connect
- scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member.cpp
  source: (
- scopesBegin:
    - meta.function-call.member
  scopes:
    - punctuation.definition.capture.begin.lambda.cpp
  source: '['
- scopes:
    - meta.lambda.capture.cpp
    - variable.language.this.cpp
  source: this
- scopes:
    - punctuation.definition.capture.end.lambda.cpp
  source: ']'
- scopesBegin:
    - meta.function.definition.body.lambda.cpp
  scopes:
    - punctuation.section.block.begin.bracket.curly.lambda.cpp
  source: '{'
- scopes:
    - storage.type.primitive.cpp
  source: auto
- source: ' pipe '
- scopes:
    - keyword.operator.assignment.cpp
  source: =
- scopes:
    - variable.other.object.access.cpp
  source: m_pipe
- scopes:
    - punctuation.separator.dot-access.cpp
  source: .
- scopes:
    - entity.name.function.member.cpp
  source: lock
- scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member.cpp
  source: (
- scopes:
    - punctuation.section.arguments.end.bracket.round.function.member.cpp
  source: )
- scopes:
    - punctuation.terminator.statement.cpp
  source: ;
- scopesEnd:
    - meta.function-call.member
    - meta.function.definition.body.lambda.cpp
  scopes:
    - punctuation.section.block.end.bracket.curly.lambda.cpp
  source: '}'
- scopes:
    - punctuation.section.arguments.end.bracket.round.function.member.cpp
  source: )
- scopes:
    - punctuation.section.block.end.bracket.curly.cpp
  source: '}'
