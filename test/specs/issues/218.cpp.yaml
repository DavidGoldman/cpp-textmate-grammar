- source: static
  scopesBegin:
    - source
  scopes:
    - storage.modifier.specifier.static
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified_type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '                           a '
  scopesBegin:
    - meta.function.definition.parameters
- source: '   a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                           a '
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                           a '
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                           a '
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                           a '
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '                      a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '                      a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '                      a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '                      a'
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '  a a'
  scopesBegin:
    - meta.body.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: '&'
  scopes:
    - keyword.operator
- source: a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control.for
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: auto
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ' a : a'
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: auto
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '&'
  scopes:
    - keyword.operator
- source: 'a '
- source: =
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: a
  scopes:
    - variable.other.property
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: auto
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ' a '
- source: =
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: a
  scopes:
    - variable.other.property
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: if
  scopes:
    - keyword.control.if
- source: (
  scopesBegin:
    - meta.parens.block
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: 'a '
- source: '&&'
  scopes:
    - keyword.operator.logical
- source: ' a'
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens.block
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: switch
  scopesBegin:
    - meta.block.switch
    - meta.head.switch
  scopes:
    - keyword.control.switch
- source: (
  scopesBegin:
    - meta.conditional.switch
  scopes:
    - punctuation.section.parens.begin.bracket.round.conditional.switch
- source: a
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.conditional.switch
  scopesEnd:
    - meta.conditional.switch
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.switch
  scopesEnd:
    - meta.head.switch
- source: case
  scopesBegin:
    - meta.body.switch
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: ' a'
- source: ':'
  scopes:
    - colon
    - punctuation.separator.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: ' a'
- source: ':'
  scopes:
    - colon
    - punctuation.separator.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: ' a'
- source: ':'
  scopes:
    - colon
    - punctuation.separator.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: ' a'
- source: ':'
  scopes:
    - colon
    - punctuation.separator.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.switch
  scopesEnd:
    - meta.block.switch
    - meta.body.switch
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                   a'
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
    - meta.body.function.definition
- source: static
  scopes:
    - storage.modifier.specifier.static
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified_type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '                      a '
  scopesBegin:
    - meta.function.definition.parameters
- source: '                   a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                      a '
- source: '          a'
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                      a '
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                      a '
- source: '                                a'
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '  a a'
  scopesBegin:
    - meta.body.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '  a a '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '0'
  scopes:
    - constant.numeric.decimal
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                 a'
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: '&'
  scopes:
    - keyword.operator
- source: a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control.for
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: auto
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ' a: a'
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.other.object.access
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: ' a'
- source: ','
  scopes:
    - comma
    - punctuation.separator.delimiter
- source: '                                                                   a'
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
