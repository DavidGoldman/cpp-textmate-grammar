- scopesBegin:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.begin.c
  source: /*
- source: ' Forward Declaration '
- scopesEnd:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.end.c
  source: '*/'
- scopes:
    - storage.type.struct.c
  source: struct
- source: ' A b'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.enum.c
  source: enum
- source: ' B c'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.union.c
  source: union
- source: ' C d'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopesBegin:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.begin.c
  source: /*
- source: ' Function Declaration '
- scopesEnd:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.end.c
  source: '*/'
- scopes:
    - storage.type.built-in.primitive.c
  source: void
- scopesBegin:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - entity.name.function.c
  source: a
- scopes:
    - punctuation.section.parameters.begin.bracket.round.c
  source: (
- scopes:
    - storage.type.struct.c
  source: struct
- source: ' A '
- scopes:
    - variable.parameter.probably.c
  source: b
- scopesEnd:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - punctuation.section.parameters.end.bracket.round.c
  source: )
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.built-in.primitive.c
  source: void
- scopesBegin:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - entity.name.function.c
  source: b
- scopes:
    - punctuation.section.parameters.begin.bracket.round.c
  source: (
- scopes:
    - storage.type.enum.c
  source: enum
- source: ' B '
- scopes:
    - variable.parameter.probably.c
  source: c
- scopesEnd:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - punctuation.section.parameters.end.bracket.round.c
  source: )
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.built-in.primitive.c
  source: void
- scopesBegin:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - entity.name.function.c
  source: c
- scopes:
    - punctuation.section.parameters.begin.bracket.round.c
  source: (
- scopes:
    - storage.type.union.c
  source: union
- source: ' C '
- scopes:
    - variable.parameter.probably.c
  source: d
- scopesEnd:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - punctuation.section.parameters.end.bracket.round.c
  source: )
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.built-in.primitive.c
  source: void
- scopesBegin:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - entity.name.function.c
  source: d
- scopes:
    - punctuation.section.parameters.begin.bracket.round.c
  source: (
- source: 'A '
- scopes:
    - variable.parameter.probably.c
  source: b
- scopesEnd:
    - meta.function.c
    - meta.function.definition.parameters.c
  scopes:
    - punctuation.section.parameters.end.bracket.round.c
  source: )
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopesBegin:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.begin.c
  source: /*
- source: ' Definition '
- scopesEnd:
    - comment.block.c
  scopes:
    - punctuation.definition.comment.end.c
  source: '*/'
- scopes:
    - storage.type.struct.c
  source: struct
- source: ' A '
- scopesBegin:
    - meta.block.c
  scopes:
    - punctuation.section.block.begin.bracket.curly.c
  source: '{'
- scopes:
    - storage.type.enum.c
  source: enum
- source: ' B c'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.union.c
  source: union
- source: ' C d'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopesEnd:
    - meta.block.c
  scopes:
    - punctuation.section.block.end.bracket.curly.c
  source: '}'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.enum.c
  source: enum
- source: ' B '
- scopesBegin:
    - meta.block.c
  scopes:
    - punctuation.section.block.begin.bracket.curly.c
  source: '{'
- source: '    a'
- scopes:
    - punctuation.separator.delimiter.c
  source: ','
- source: ' b'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopesEnd:
    - meta.block.c
  scopes:
    - punctuation.section.block.end.bracket.curly.c
  source: '}'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.union.c
  source: union
- source: ' C '
- scopesBegin:
    - meta.block.c
  scopes:
    - punctuation.section.block.begin.bracket.curly.c
  source: '{'
- scopes:
    - storage.type.struct.c
  source: struct
- source: ' A b'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopes:
    - storage.type.enum.c
  source: enum
- source: ' B c'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
- scopesEnd:
    - meta.block.c
  scopes:
    - punctuation.section.block.end.bracket.curly.c
  source: '}'
- scopes:
    - punctuation.terminator.statement.c
  source: ;
