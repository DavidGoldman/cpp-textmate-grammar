- source: '#include "compiler/rule.h"'
- source: '#include "compiler/util/hash_combine.h"'
- source: 'namespace tree_sitter {'
- source: 'namespace rules {'
- source: 'using std::move;'
- source: 'using std::vector;'
- source: 'using until::hash_combine;'
- source: 'Rule::Rule(const Rule &other) : blank_(Blank{}), type(BlankType) {'
- source: '    *this = other;'
- source: '}'
- source: 'static void destroy_value(Rule *rule) {'
- source: '    switch (rule->type) {'
- source: '        case Rule::BlankType: return rule->blank.~Blank();'
- source: '    }'
- source: '}'
- source: 'Rule &Rule::operator=(const Rule &other) {'
- source: '    destroy_value(this);'
- source: '    type = other.type;'
- source: '    switch(type) {'
- source: '        case BlankType:'
- source: '            new (&blank_) Blank(other.blank);'
- source: '            break;'
- source: '        case CharacterSetType:'
- source: '            new (&charater_set_) CharacterSet(other.character_set_);'
- source: '            break;'
- source: '    }'
- source: '}'
- source: '}'
- source: '}'
