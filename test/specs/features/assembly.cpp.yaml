- source: asm(R"(
- source: .globl func
- source: '    .type func, @function'
- source: '    func:'
- source: '    .cfi_startproc'
- source: '    movl $7, %eax'
- source: '    retl'
- source: '    .cfi_endproc'
- source: )");
- source: int main()
- source: '{'
- source: '    int n = func();'
- source: '    // extended inline assembly'
- source: '    asm ("leal (%0,%0,4),%0"'
- source: '         : "=r" (n)'
- source: '         : "0" (n));'
- source: '    // standard inline assembly'
- source: '    asm ("movq $60, %rax\n\t" // the exit syscall number on Linux'
- source: '         "movq $2,  %rdi\n\t" // this program returns 2'
- source: '         "syscall");'
- source: '}'
