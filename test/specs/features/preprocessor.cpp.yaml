- source: '#include <iostream>'
- source: '#include "relative_stuff"'
- source: '#define a thing {}'
- source: '#define a(arg1, arg2) arg1 arg2'
- source: '#define a(arg1, arg2) #macro_variable ##macro_variable'
- source: '#define thing class Stuff'
- source: '#ifdef __vax__'
- source: '#error "Won''t work on VAXen.  See comments at get_last_object."'
- source: '#endif'
- source: '#if !defined(FOO) && defined(BAR)'
- source: '#error ''BAR requires FOO.'''
- source: '#endif'
- source: '#ifdef __vax__'
- source: '#warning "Won''t work on VAXen.  See comments at get_last_object."'
- source: '#endif'
- source: '#if !defined(FOO) && defined(BAR)'
- source: '#warning ''BAR requires FOO.'''
- source: '#endif'
- source: '#define thing struct Stuff '
- source: '#define thing struct Stuff \'
- source: '    {'
- source: '#define foo namespace foo { struct bar { \'
- source: 'int data, members; \'
- source: int other;
- source: '#pragma once'
- source: '#pragma GCC poison printf '
- source: '#include <type_traits>'
- source: '#define IsPointDef(...) \'
- source: '    template<> \'
- source: '    struct IsPoint<__VA_ARGS__> \'
- source: '        {\'
- source: '        static const bool isPoint = true;\'
- source: '                }'
- source: '#define ArrayBasedPointDef(T) \'
- source: '    IsPointDef(T); \'
- source: '    template<> \'
- source: '    struct IsArrayBasedPoint<T>:public std::true_type \'
- source: '        {'
