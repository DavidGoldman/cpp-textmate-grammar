- source: '#include <string>'
- source: '#include <iostream>'
- source: '#include <vector>'
- source: typedef int Type;
- source: auto a = 10;
- source: Type (*fn_ptr)(const int);
- source: 'Type (*fn_ptr2)(const int, std::string);'
- source: 'void func1(Type (*)(const int, std::string) = fn_ptr2) {};'
- source: 'void func2(Type (*name)(const int) = fn_ptr) {};'
- source: 'void func3(Type (*name)(const int)) {};'
- source: 'void func4(Type (*)(int, bool)) {};'
- source: 'void func5(Type name = a) {};'
- source: 'void func6(Type = a ) {};'
- source: 'void func7(Type name) {};'
- source: 'void func8(Type) {};'
- source: 'void func9() {};'
- source: 'void func11( Type (*)(const int, std::string) = fn_ptr2) {};'
- source: 'void func12( Type (*name)(const int) = fn_ptr) {};'
- source: 'void func13( Type (*name)(const int)) {};'
- source: 'void func14( Type (*)(int, bool)) {};'
- source: 'void func15( Type name = a) {};'
- source: 'void func16( Type = a ) {};'
- source: 'void func17( Type name) {};'
- source: 'void func18( Type) {};'
- source: 'void func19() {};'
- source: 'void func20(int const thing) { return; }'
- source: 'void func21(const int thing) { return; }'
- source: 'void func22(decltype(1) thing) { return; }'
- source: 'void func23(const Type) {};'
- source: 'void func24(const int) {};'
- source: 'void func25(short const int) {};'
- source: 'void func26(const short int) {};'
- source: 'void func27(bool (*name)(int, int)) {};'
- source: 'class GameState {};'
- source: 'struct Node {};'
- source: 'enum Thing {};'
- source: >-
    class Node *exploreTree(class GameState &game, std::vector<int> &searchList)
    {}
- source: >-
    class Node *expandNode(struct Node *nodePtr, class GameState &game,
    std::vector<int> &searchList) {}
- source: >-
    class Node *expandNode(struct Node *nodePtr, enum Thing &game,
    std::vector<int> &searchList) {}
- source: 'template<int, typename Callable, typename Ret, typename... Args>'
- source: 'auto internalConversionToFuncPtr(Callable&& a_callable, Ret (*)(Args...)) {}'
- source: >-
    void failedToLoadCriticalData(const std::string& what, bool throwExcp =
    false) {}
- source: >-
    void failedToLoadCriticalData(const std::string * what, bool throwExcp =
    false) {}
- source: // beginning of a function
- source: void aFunction(
- source: '    int a'
- source: );
- source: 'void func(short a) {'
- source: '}'
- source: 'int main(int argc, char *argv[1 + 1])'
- source: '    {'
- source: '        std::cout << "done\n";'
- source: '        return 0;'
- source: '    }'
- source: '// TODO: add [[attribute]] examples'
