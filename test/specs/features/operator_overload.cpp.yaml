- source: >-
    Item  operator+( const string&  base        , const int&    repetitions )
    {};
- source: >-
    Item  operator-( const int&     the_input   , const Item&   input_item  )
    {};
- source: >-
    Item  operator/( const Item&    input_item  , const int&    the_input   )
    {};
- source: >-
    Item  operator^( const Item&    input_item  , const int&    the_input   )
    {};
- source: 'inline ostream& operator,(ostream& o, ostream& (*manip_fun)(ostream&)) {};'
- source: // templated type conversion
- source: 'operator std::basic_string_view<CharT, Traits>() const noexcept {}'
- source: // resolution type conversion
- source: 'operator std::basic_string_view() const noexcept {}'
- source: // implicit conversion
- source: 'operator std::thing::string() const  {}'
- source: 'operator double() const  {} '
- source: >-
    template<typename ElementT> bool operator()(const ElementT& lhs, const
    ElementT& rhs)
- source: '          {'
- source: '            return std::char_traits<char>::compare(lhs.first, rhs.first, sizeof(lhs.first)) < 0;'
- source: '          }'
- source: // custom literals
- source: void operator "" _km(long double);
- source: void operator "" _km(long double);
- source: 'std::string operator "" _i18n(const char*, std::size_t);'
- source: float operator ""_e(const char*);
